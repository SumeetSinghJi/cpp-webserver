cmake_minimum_required(VERSION 3.10)

project(tests)

set(OPENSSL_INCLUDE_DIR "${OPENSSL_ROOT_DIR}/include")
if(WIN32)
    set(OPENSSL_LIBRARIES 
    "${OPENSSL_ROOT_DIR}/lib/VC/x64/MT/libcrypto.lib"
    "${OPENSSL_ROOT_DIR}/lib/VC/x64/MT/libssl_static.lib")

set(SOURCES
    tests.cpp
    ../src/lightweight_cpp_webserver.cpp
)

add_executable(tests ${SOURCES})

target_include_directories(tests PRIVATE
    ${OPENSSL_INCLUDE_DIR}
    "${CMAKE_CURRENT_SOURCE_DIR}/../src/googletest/googletest/include"
    "${CMAKE_CURRENT_SOURCE_DIR}/../headers"
    "${CMAKE_CURRENT_SOURCE_DIR}/../website"
    "${CMAKE_CURRENT_SOURCE_DIR}/../keys"
)

# Google test Cmake static lib generator: cmake -G "MinGW Makefiles" -Dgtest_build_tests=OFF -DBUILD_SHARED_LIBS=OFF ..
# generates 4 libs below
# libgtest_main.a
# libgtest.a
# libgmock_main.a
# libgmock.a

target_link_libraries(tests PRIVATE 
    "${CMAKE_CURRENT_SOURCE_DIR}/../src/googletest/build/lib/libgtest_main.a" # Google test
    "${CMAKE_CURRENT_SOURCE_DIR}/../src/googletest/build/lib/libgtest.a" # Google test
    "${CMAKE_CURRENT_SOURCE_DIR}/../src/googletest/build/lib/libgmock_main.a" # Google test
    "${CMAKE_CURRENT_SOURCE_DIR}/../src/googletest/build/lib/libgmock.a" # Google test
    "stdc++"
    "-lws2_32" # MinGW: #include <winsock.h>
    # or try Ws2_32
    ${OPENSSL_LIBRARIES}
    
)

set_target_properties(tests PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY "../" # output .exe to "./"
)